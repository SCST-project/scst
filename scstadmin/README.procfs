SCST Configuration/Administration scripts. Here you'll find scstadmin which reads
a configuration file /etc/scst.conf, or one if your choosing. With it you can manually
or automatically configure every aspect of SCST incuding enabling/disabling target mode
on your target SCSI controller. The old directory contains scst_db which uses a mysql
backend database to configure SCST but doesn't handle all the things scstadmin handles.
The perl module SCST::SCST is very generic and tries to handle error checking as well.

The init script was written for debian but should work on most distributions.


	scstadmin.sysfs	
			Use this version if you've disabled procfs support in SCST.
	scstadmin.procfs
			This is the default version which uses the older procfs.

	scst-0.8.22	This is the SCST Perl module required by scstadmin and scst_db.
	scst-0.9.00	This is the SCST Perl module to be used with SCST compiled
                        for sysfs. Note, the current version of scstadmin will NOT yet
                        work with this module.

	scstadmin	Script which can accept operations on a command line or from
			a configuration file. See scst.conf. For command help,
				#> scstadmin

	scst.conf	Configuration file for scst script. Usually stored
			in /etc.

	examples	Configuration examples.

	init.d/scst	Init script to start SCST on boot which uses scstadmin.


Installation:
=============

Installation is simple.

  #> make
  #> make install

This installs scstadmin, the init.d script and the perl module. If you want SCST to
startup and configure automatically upon boot, enable SCST using your favorite
SysV init editor.

NOTE: The init.d startup & shutdown scripts now depend on lsb-core. Ensure you have
lsb-core installed or 'make install' will fail. Make sure /usr/lib/lsb/install_initd
exists.

To enable the obsolete procfs version:

  #> make enable_proc
  #> make
  #> make install


Getting Started:
================

The following pertains to the older procfs based SCST.

The scstadmin script is much more functional than scst_db at this point but uses a
standard text-based config file. The original thought behind scst_db was to write
a daemon process which would except network connections and issue SCST commands. A
client app would then connect to that port. 

Copy scst.conf to /etc and edit it to your liking. if you have an existing configuration
then have scstadmin write it out to a config file for you:

  #> scstadmin -WriteConfig /etc/scst.conf

When removing devices, users or groups from the config file keep in mind that
"scstadmin -config" will NOT remove those configurations from the running system unless
you use the -ForceConfig flag. Also, using the init script to reload the configuration

  #> /etc/init.d/scst reload-config

will also not remove configurations from a running system.

NOTE! Section "[TARGETS enable]" in the config file is for qla2x00t driver only!

Mark.Buechler@gmail.com


To Do:
======

- Compare device and assignment options between current and saved configurations and
  reopen/reassign as required if -ForceConfig is used.

Completed:
==========

- Create options section to scst.conf which will be carried forward in a -writeconfig.

- Add option to issue a LIP after any group assignment changes so initiators can see
  the change immediately.
